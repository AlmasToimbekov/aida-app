version: '2.2'

services:
  aida:
    image: aida:dev
    environment:
      PG_HOST: postgres
      PG_PORT: ${PG_PORT}
    build: 
      context: .
      dockerfile: ./Dockerfile.dev
    container_name: aida
    restart: unless-stopped
    volumes: 
      - .:/app
    ports:
      - "3000:3000"
      - "80:8080"
    depends_on:
      - postgres
    networks: 
      - aida-network
  postgres:
    container_name: aida-pg
    image: postgres:12
    environment:
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./volumes/postgres/data:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    networks:
      - aida-network
    restart: unless-stopped

  keycloak:
    container_name: aida-keycloak
    image: jboss/keycloak
    restart: unless-stopped
    ports: 
      - "8080:8080"
    depends_on:
      - keycloak-pg
    environment:
      DB_VENDOR: ${DB_VENDOR}
      DB_ADDR: ${DB_ADDR}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_PASSWORD: ${DB_PASSWORD}
      # KEYCLOAK_USER: ${KEYCLOAK_USER}
      # KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    networks:
      - aida-network
        # aliases:
        #   - aida.auth
  keycloak-pg:
    container_name: aida-keycloak-pg
    image: 'postgres:12'
    environment:
      KEYCLOAK_DB: ${KEYCLOAK_DB}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - "55433:5432"
    volumes:
      - ./volumes/auth-db/data:/var/lib/postgresql/data
    networks:
      - aida-network

networks:
  aida-network:
    driver: bridge